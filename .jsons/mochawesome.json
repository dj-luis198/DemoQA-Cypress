{
  "stats": {
    "suites": 1,
    "tests": 11,
    "passes": 11,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-23T18:18:44.112Z",
    "end": "2024-03-23T18:18:47.689Z",
    "duration": 3577,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fb925c02-bafd-48df-a849-7bf5d0ba56d8",
      "title": "",
      "fullFile": "cypress/e2e/API-Book-Store/bookStore.cy.js",
      "file": "cypress/e2e/API-Book-Store/bookStore.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "582c432d-1cf7-4725-b1ff-c6d37043f646",
          "title": "Account API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Post - Create user",
              "fullTitle": "Account API Post - Create user",
              "timedOut": null,
              "duration": 801,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"/Account/v1/User\",\n  body: {\n    userName,\n    password: userPass\n  }\n}).then((response) => {\n  expect(response.status).is.eq(201);\n  const validate = ajv.compile(schema);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n  userID = response.body.userID;\n});",
              "err": {},
              "uuid": "156261b1-ae87-4b10-822e-e1ec8b701db8",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post - Generate Token",
              "fullTitle": "Account API Post - Generate Token",
              "timedOut": null,
              "duration": 495,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"/Account/v1/GenerateToken\",\n  body: {\n    userName,\n    password: userPass\n  }\n}).then((response) => {\n  expect(response.status).is.eq(200);\n  const validate = ajv.compile(schemaToken);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n  token = response.body.token;\n});",
              "err": {},
              "uuid": "2269cf31-75b5-4f54-8706-ee0504ebfb82",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post - Authorized",
              "fullTitle": "Account API Post - Authorized",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(token);\ncy.request({\n  method: \"POST\",\n  url: \"/Account/v1/Authorized\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  body: {\n    userName,\n    password: userPass\n  }\n}).then((response) => {\n  expect(response.status).is.eq(200);\n  expect(response.body).is.eq(true);\n});",
              "err": {},
              "uuid": "debe00ed-4578-40d7-9774-e6411c331993",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get - User",
              "fullTitle": "Account API Get - User",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: `/Account/v1/User/${userID}`,\n  headers: {\n    \"Authorization\": `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  }\n}).then((response) => {\n  expect(response.status).to.have.eq(200);\n  const validate = ajv.compile(schemaUser);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n});",
              "err": {},
              "uuid": "3a6b9e11-9f7a-4f0f-8153-7532eb2cb4b1",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get - Books",
              "fullTitle": "Account API Get - Books",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"/BookStore/v1/Books\"\n}).then((response) => {\n  expect(response.status).to.have.eq(200);\n  const validate = ajv.compile(schemaGBooks);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n  book = response.body.books[0].isbn;\n  book2 = response.body.books[1].isbn;\n  book3 = response.body.books[2].isbn;\n});",
              "err": {},
              "uuid": "8e144ba8-972c-4ecf-8713-2925431d22b0",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post - add books user",
              "fullTitle": "Account API Post - add books user",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"POST\",\n  url: \"/BookStore/v1/Books\",\n  auth: {\n    user: userName,\n    pass: userPass\n  },\n  body: {\n    userId: userID,\n    collectionOfIsbns: [{ isbn: book }, { isbn: book3 }]\n  }\n}).then((response) => {\n  expect(response.status).is.eq(201);\n  const validate = ajv.compile(schemaBooksUser);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n  expect(response.body.books[0].isbn).to.eq(book);\n});",
              "err": {},
              "uuid": "3ff7ed1e-374d-439c-8c52-c4e4b6ddf703",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get - Book",
              "fullTitle": "Account API Get - Book",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"/BookStore/v1/Book\",\n  qs: {\n    ISBN: book2\n  }\n}).then((response) => {\n  expect(response.status).to.have.eq(200);\n  const validate = ajv.compile(schemaBook);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n});",
              "err": {},
              "uuid": "839e5c14-1219-4c48-8809-d40c25d7c575",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - book user",
              "fullTitle": "Account API PUT - book user",
              "timedOut": null,
              "duration": 322,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"PUT\",\n  url: `/BookStore/v1/Books/${book}`,\n  auth: {\n    user: userName,\n    pass: userPass\n  },\n  body: {\n    userId: userID,\n    isbn: book2\n  }\n}).then((response) => {\n  expect(response.status).is.eq(200);\n  const validate = ajv.compile(schemaUser);\n  const valid = validate(response.body);\n  expect(valid, \"schema valid?\").to.be.true;\n});",
              "err": {},
              "uuid": "80698c8e-f417-4fb4-8c9c-039e269e1bf5",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - book",
              "fullTitle": "Account API DELETE - book",
              "timedOut": null,
              "duration": 418,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"/BookStore/v1/Book\",\n  auth: {\n    user: userName,\n    pass: userPass\n  },\n  body: {\n    userId: userID,\n    isbn: book2\n  }\n}).then((response) => {\n  expect(response.status).to.have.eq(204);\n});",
              "err": {},
              "uuid": "3a2a968e-5fd4-40e9-867c-535a0d1458a8",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - books",
              "fullTitle": "Account API DELETE - books",
              "timedOut": null,
              "duration": 273,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: \"/BookStore/v1/Books\",\n  qs: {\n    UserId: userID\n  },\n  auth: {\n    user: userName,\n    pass: userPass\n  }\n}).then((response) => {\n  expect(response.status).to.have.eq(204);\n});",
              "err": {},
              "uuid": "09fbc8fd-9a3a-41b7-a7bc-dee29bff50a9",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - User",
              "fullTitle": "Account API DELETE - User",
              "timedOut": null,
              "duration": 306,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"DELETE\",\n  url: `/Account/v1/User/${userID}`,\n  headers: {\n    \"Authorization\": `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  }\n}).then((response) => {\n  expect(response.status).to.have.eq(204);\n});",
              "err": {},
              "uuid": "c8970a19-c620-42db-a7a4-3260255292f8",
              "parentUUID": "582c432d-1cf7-4725-b1ff-c6d37043f646",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "156261b1-ae87-4b10-822e-e1ec8b701db8",
            "2269cf31-75b5-4f54-8706-ee0504ebfb82",
            "debe00ed-4578-40d7-9774-e6411c331993",
            "3a6b9e11-9f7a-4f0f-8153-7532eb2cb4b1",
            "8e144ba8-972c-4ecf-8713-2925431d22b0",
            "3ff7ed1e-374d-439c-8c52-c4e4b6ddf703",
            "839e5c14-1219-4c48-8809-d40c25d7c575",
            "80698c8e-f417-4fb4-8c9c-039e269e1bf5",
            "3a2a968e-5fd4-40e9-867c-535a0d1458a8",
            "09fbc8fd-9a3a-41b7-a7bc-dee29bff50a9",
            "c8970a19-c620-42db-a7a4-3260255292f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3421,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "demoQA",
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}